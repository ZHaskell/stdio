# NB: don't set `language: haskell` here

# explicitly request legacy non-sudo based build environment
sudo: required

# The following enables several GHC versions to be tested; often it's enough to test only against the last release in a major GHC version. Feel free to omit lines listings versions you don't need/want testing for.
env:
    - CABALVER=head GHCVER=8.6.2
    - CABALVER=head GHCVER=head   # see section about GHC HEAD snapshots

matrix:
   allow_failures:
       - env: CABALVER=head GHCVER=head


# Note: the distinction between `before_install` and `install` is not important.
before_install:
    - travis_retry sudo add-apt-repository -y ppa:hvr/ghc
    - travis_retry sudo apt-get update
    - travis_retry sudo apt-get install --allow-unauthenticated cabal-install-$CABALVER ghc-$GHCVER 
    - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH
    - git clone https://github.com/libuv/libuv.git && cd libuv && git checkout tags/v1.11.0 && sh autogen.sh && ./configure && make && sudo make install && cd ..
    - export PATH="$HOME/.cabal/bin:/usr/local/lib:$PATH"   # for build-tools
    - export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
    - export EXTRA_OPT="--extra-lib-dirs=/usr/local/include --extra-lib-dirs=/usr/local/lib"

install:
    - git submodule update --init
    - cabal --version
    - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
    - travis_retry cabal update

# Here starts the actual work to be performed for the package under test; any command which exits with a non-zero exit code causes the build to fail.
script:
    - if [ -f configure.ac ]; then autoreconf -i; fi
    - cabal configure --enable-tests --enable-benchmarks $EXTRA_OPT -v3
    - cabal build   # this builds all libraries and executables (including tests/benchmarks)
    - cabal test --test-show-details=direct --test-options="--color"
    # - cabal check
    - cabal sdist   # tests that a source-distribution can be generated

    # Check that the resulting source distribution can be built & installed.
    # If there are no other `.tar.gz` files in `dist`, this can be even simpler:
    # `cabal install --force-reinstalls dist/*-*.tar.gz`
    - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
      (cd dist && cabal install --force-reinstalls $EXTRA_OPT "$SRC_TGZ")
